# Integración del predictor avanzado en main.py

# 1. Importar el predictor avanzado (añadir al inicio del archivo)
from predictor.advanced_predictor import AdvancedPredictor

# 2. Inicializar predictor avanzado (reemplazar el inicializador actual)
# Sustituir estas líneas:
# predictor_config = {
#     'prediction_threshold': self.config.get('prediction_threshold', 0.6),
#     'prediction_horizon': self.config.get('prediction_horizon', 24),  # horas
#     'data_dir': self.data_dir
# }
# self.predictor = SimplePredictor(predictor_config)
# self.predictor.load_prediction_models()

# Con estas:
predictor_config = {
    'prediction_threshold': self.config.get('prediction_threshold', 0.3),
    'min_history_points': 5,
    'max_prediction_hours': 24,
    'time_intervals': [1, 2, 4, 8, 12, 24],
    'data_dir': self.data_dir
}
self.predictor = AdvancedPredictor(predictor_config)
self.predictor.load_prediction_models()

# 3. Modificar el método process_predictions para usar el nuevo predictor
# En lugar de usar get_failure_prediction debemos usar get_failure_prediction_timeline

# Reemplazar:
# prediction = self.predictor.get_failure_prediction(service_id, metrics_list)

# Con:
prediction = self.predictor.get_failure_prediction_timeline(service_id, metrics_list)