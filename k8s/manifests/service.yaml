apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: predictive-maintenance
  labels:
    app: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: api
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: dashboard-service
  namespace: predictive-maintenance
  labels:
    app: dashboard
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: dashboard
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: predictive-maintenance
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: timescaledb
  namespace: predictive-maintenance
  labels:
    app: timescaledb
spec:
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: timescaledb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: pushgateway
  namespace: predictive-maintenance
  labels:
    app: pushgateway
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
spec:
  ports:
  - port: 9091
    targetPort: 9091
    protocol: TCP
    name: http
  selector:
    app: pushgateway
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: predictive-maintenance
  labels:
    app: prometheus
spec:
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: http
  selector:
    app: prometheus
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: predictive-maintenance
  labels:
    app: grafana
spec:
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: grafana
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: predictive-maintenance-ingress
  namespace: predictive-maintenance
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - predictive.example.com
    secretName: predictive-tls
  rules:
  - host: predictive.example.com
    http:
      paths:
      - path: /()(.*)
        pathType: Prefix
        backend:
          service:
            name: dashboard-service
            port:
              number: 80
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 8000
      - path: /grafana(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000