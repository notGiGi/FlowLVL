{
  "web-service": {
    "description": "Políticas para servicios web (NodeJS, Java, Python, etc.)",
    "actions": {
      "memory_leak_restart": {
        "description": "Reinicia el servicio para resolver fuga de memoria",
        "remediation": {
          "type": "command",
          "command": "kubectl rollout restart deployment ${service_id}"
        },
        "conditions": {
          "metrics": {
            "memory_usage": "> 70",
            "gc_collection_time": "> 300"
          },
          "anomaly_score": "> 0.6"
        },
        "priority": "high"
      },
      "cpu_scale_up": {
        "description": "Escala horizontalmente cuando hay alta carga",
        "remediation": {
          "type": "command",
          "command": "kubectl scale deployment ${service_id} --replicas=$(kubectl get deployment ${service_id} -o=jsonpath='{.spec.replicas}'+1)"
        },
        "conditions": {
          "metrics": {
            "cpu_usage": "> 75",
            "response_time_ms": "> 300"
          },
          "anomaly_score": "> 0.6"
        },
        "priority": "medium"
      },
      "log_diagnostic": {
        "description": "Recopila logs para diagnóstico (no destructivo)",
        "remediation": {
          "type": "command",
          "command": "kubectl logs deployment/${service_id} --tail=500 > /tmp/diagnostic_${service_id}_$(date +%Y%m%d%H%M%S).log"
        },
        "conditions": {
          "metrics": {
            "error_rate": "> 2"
          },
          "anomaly_score": "> 0.5"
        },
        "priority": "low"
      }
    }
  },
  
  "api-gateway": {
    "description": "Políticas específicas para API Gateway",
    "actions": {
      "clear_cache": {
        "description": "Limpia la caché del gateway",
        "remediation": {
          "type": "api",
          "method": "POST",
          "endpoint": "http://${service_id}/admin/cache/clear",
          "headers": {
            "Authorization": "Bearer ${admin_token}"
          },
          "payload": {}
        },
        "conditions": {
          "metrics": {
            "cache_miss_rate": "> 30",
            "response_time_ms": "> 400"
          },
          "anomaly_score": "> 0.6"
        },
        "parameters": {
          "admin_token": "REPLACE_WITH_REAL_TOKEN"
        },
        "priority": "medium"
      }
    }
  },
  
  "database": {
    "description": "Políticas para bases de datos",
    "actions": {
      "connection_pool_adjustment": {
        "description": "Ajusta pool de conexiones",
        "remediation": {
          "type": "command",
          "command": "kubectl exec ${service_id}-0 -- sh -c \"echo 'ALTER SYSTEM SET max_connections = ${max_connections};' | psql -U postgres && echo 'SELECT pg_reload_conf();' | psql -U postgres\""
        },
        "conditions": {
          "metrics": {
            "active_connections": "> 70",
            "connection_wait_time": "> 100"
          },
          "anomaly_score": "> 0.6"
        },
        "parameters": {
          "max_connections": "200"
        },
        "priority": "high"
      },
      "vacuum_analyze": {
        "description": "Ejecuta vacuum analyze (bajo impacto)",
        "remediation": {
          "type": "command",
          "command": "kubectl exec ${service_id}-0 -- sh -c \"echo 'VACUUM ANALYZE;' | psql -U postgres\""
        },
        "conditions": {
          "metrics": {
            "query_time_avg": "> 300",
            "index_bloat": "> 30"
          },
          "anomaly_score": "> 0.5"
        },
        "priority": "medium"
      }
    }
  },
  
  "cache": {
    "description": "Políticas para servicios de caché (Redis, Memcached)",
    "actions": {
      "purge_memory": {
        "description": "Comando para purgar memoria en Redis",
        "remediation": {
          "type": "command",
          "command": "kubectl exec ${service_id}-0 -- redis-cli MEMORY PURGE"
        },
        "conditions": {
          "metrics": {
            "memory_fragmentation_ratio": "> 1.5"
          },
          "anomaly_score": "> 0.6"
        },
        "priority": "medium"
      },
      "clear_cache_partial": {
        "description": "Limpia parcialmente la caché (bajo impacto)",
        "remediation": {
          "type": "command",
          "command": "kubectl exec ${service_id}-0 -- redis-cli --scan --pattern 'session:*' | xargs -L 100 kubectl exec ${service_id}-0 -- redis-cli DEL"
        },
        "conditions": {
          "metrics": {
            "memory_usage": "> 80",
            "hit_rate": "< 70"
          },
          "anomaly_score": "> 0.7"
        },
        "priority": "medium"
      }
    }
  },
  
  "generic_web_service": {
    "description": "Políticas genéricas para servicios web",
    "actions": {
      "diagnostic_gather": {
        "description": "Recopila diagnóstico (NO destructivo)",
        "remediation": {
          "type": "command",
          "command": "sh -c 'kubectl top pod -l app=${service_id} > /tmp/${service_id}_metrics_$(date +%Y%m%d%H%M%S).txt && kubectl logs -l app=${service_id} --tail=200 > /tmp/${service_id}_logs_$(date +%Y%m%d%H%M%S).txt'"
        },
        "conditions": {
          "metrics": {
            "cpu_usage": "> 70",
            "memory_usage": "> 70"
          },
          "anomaly_score": "> 0.5"
        },
        "priority": "low"
      }
    }
  }
}